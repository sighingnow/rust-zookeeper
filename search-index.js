var searchIndex = JSON.parse('{\
"zookeeper":{"doc":"","i":[[0,"recipes","zookeeper","Extended ZooKeeper recipes from Apache Curator.",null,null],[0,"cache","zookeeper::recipes","Caching mechanisms.",null,null],[6,"ChildData","zookeeper::recipes::cache","Data contents of a znode and associated <code>Stat</code>.",null,null],[6,"Data","","Data for all known children of a znode.",null,null],[4,"PathChildrenCacheEvent","","",null,null],[13,"Initialized","","",0,null],[13,"ConnectionSuspended","","",0,null],[13,"ConnectionLost","","",0,null],[13,"ConnectionReconnected","","",0,null],[13,"ChildRemoved","","",0,null],[13,"ChildAdded","","",0,null],[13,"ChildUpdated","","",0,null],[3,"PathChildrenCache","","A Path Cache is used to watch a znode.",null,null],[11,"new","","Create a new cache instance watching <code>path</code>. If <code>path</code> does …",1,[[["arc",3],["zookeeper",3],["str",15]],[["pathchildrencache",3],["zkresult",6]]]],[11,"get_current_data","","Return the current data. There are no guarantees of …",1,[[],["data",6]]],[11,"clear","","",1,[[]]],[11,"start","","Start the cache. The cache is not started automatically. …",1,[[],["zkresult",6]]],[11,"add_listener","","",1,[[["fn",8],["send",8]],["subscription",3]]],[11,"remove_listener","","",1,[[["subscription",3]]]],[0,"leader","zookeeper::recipes","",null,null],[3,"LeaderLatch","zookeeper::recipes::leader","",null,null],[11,"new","","",2,[[["arc",3],["zookeeper",3],["string",3]]]],[11,"start","","",2,[[],["zkresult",6]]],[11,"stop","","",2,[[],["zkresult",6]]],[11,"id","","",2,[[],["str",15]]],[11,"path","","",2,[[],[["option",4],["string",3]]]],[11,"has_leadership","","",2,[[],["bool",15]]],[0,"queue","zookeeper::recipes","",null,null],[3,"ZkQueue","zookeeper::recipes::queue","",null,null],[11,"new","","",3,[[["arc",3],["zookeeper",3],["string",3]],["zkresult",6]]],[11,"offer","","Inserts data into the queue",3,[[["vec",3],["u8",15]],[["zkresult",6],["string",3]]]],[11,"take","","Removes the head of the queue and returns it, blocking …",3,[[],[["vec",3],["zkresult",6]]]],[11,"peek","","Returns the data at the first element of the queue, or …",3,[[],[["zkresult",6],["option",4]]]],[11,"poll","","Attempts to remove the head of the queue and return it. …",3,[[],[["zkresult",6],["option",4]]]],[3,"Permission","zookeeper","Describes the ability of a user to perform a certain …",null,null],[3,"Acl","","An access control list.",null,null],[12,"perms","","The permissions associated with this ACL.",4,null],[12,"scheme","","The authentication scheme this list is used for. The most …",4,null],[12,"id","","The ID of the user under the <code>scheme</code>. For example, with …",4,null],[4,"ZkError","","Basic type for errors returned from the server.",null,null],[13,"APIError","","This code is never returned from the server. It should …",5,null],[13,"AuthFailed","","Client authentication failed.",5,null],[13,"BadArguments","","Invalid arguments.",5,null],[13,"BadVersion","","Version conflict in <code>set</code> operation. In case of …",5,null],[13,"ConnectionLoss","","Connection to the server has been lost.",5,null],[13,"DataInconsistency","","A data inconsistency was found.",5,null],[13,"EphemeralOnLocalSession","","Attempt to create ephemeral node on a local session.",5,null],[13,"InvalidACL","","Invalid <code>Acl</code> specified.",5,null],[13,"InvalidCallback","","Invalid callback specified.",5,null],[13,"MarshallingError","","Error while marshalling or unmarshalling data.",5,null],[13,"NoAuth","","Not authenticated.",5,null],[13,"NoChildrenForEphemerals","","Ephemeral nodes may not have children.",5,null],[13,"NodeExists","","Request to create node that already exists.",5,null],[13,"NoNode","","Attempted to read a node that does not exist.",5,null],[13,"NotEmpty","","The node has children.",5,null],[13,"NotReadOnly","","State-changing request is passed to read-only server.",5,null],[13,"NoWatcher","","Attempt to remove a non-existing watcher.",5,null],[13,"OperationTimeout","","Operation timeout.",5,null],[13,"RuntimeInconsistency","","A runtime inconsistency was found.",5,null],[13,"SessionExpired","","The session has been expired by the server.",5,null],[13,"SessionMoved","","Session moved to another server, so operation is ignored.",5,null],[13,"SystemError","","System and server-side errors. This is never thrown by …",5,null],[13,"Unimplemented","","Operation is unimplemented.",5,null],[4,"CreateMode","","CreateMode value determines how the znode is created on …",null,null],[13,"Persistent","","The znode will not be automatically deleted upon client\'s …",6,null],[13,"Ephemeral","","The znode will be deleted upon the client\'s disconnect.",6,null],[13,"PersistentSequential","","The name of the znode will be appended with a …",6,null],[13,"EphemeralSequential","","The znode will be deleted upon the client\'s disconnect, …",6,null],[13,"Container","","Container nodes are special purpose nodes useful for …",6,null],[4,"KeeperState","","Enumeration of states the client may be at a Watcher …",null,null],[13,"Disconnected","","The client is in the disconnected state - it is not …",7,null],[13,"SyncConnected","","The client is in the connected state - it is connected to …",7,null],[13,"AuthFailed","","Authentication has failed -- connection requires a new …",7,null],[13,"ConnectedReadOnly","","The client is connected to a read-only server, that is …",7,null],[13,"SaslAuthenticated","","Used to notify clients that they are SASL-authenticated, …",7,null],[13,"Expired","","The serving cluster has expired this session. The …",7,null],[4,"WatchedEventType","","Enumeration of types of events that may occur on the …",null,null],[13,"None","","Nothing known has occurred on the znode. This value is …",8,null],[13,"NodeCreated","","Issued when a znode at a given path is created.",8,null],[13,"NodeDeleted","","Issued when a znode at a given path is deleted.",8,null],[13,"NodeDataChanged","","Issued when the data of a watched znode are altered. This …",8,null],[13,"NodeChildrenChanged","","Issued when the children of a watched znode are created …",8,null],[13,"DataWatchRemoved","","Issued when the client removes a data watcher.",8,null],[13,"ChildWatchRemoved","","Issued when the client removes a child watcher.",8,null],[4,"ZkState","","Enumeration of states the client may be at any time.",null,null],[13,"Associating","","Previously used to represent a state between connection …",9,null],[13,"AuthFailed","","Authentication has failed. Operations will return …",9,null],[13,"Closed","","The session has ended. Operations will return …",9,null],[13,"Connected","","Session has been fully established. Operations will …",9,null],[13,"ConnectedReadOnly","","Connected to a read-only server. See …",9,null],[13,"Connecting","","Currently attempting to connect with an ensemble member. …",9,null],[13,"NotConnected","","Theoretically used as a special state to represent …",9,null],[3,"Stat","","Statistics about a znode, similar to the UNIX <code>stat</code> …",null,null],[12,"czxid","","The transaction ID that created the znode.",10,null],[12,"mzxid","","The last transaction that modified the znode.",10,null],[12,"ctime","","Milliseconds since epoch when the znode was created.",10,null],[12,"mtime","","Milliseconds since epoch when the znode was last modified.",10,null],[12,"version","","The number of changes to the data of the znode.",10,null],[12,"cversion","","The number of changes to the children of the znode.",10,null],[12,"aversion","","The number of changes to the ACL of the znode.",10,null],[12,"ephemeral_owner","","The session ID of the owner of this znode, if it is an …",10,null],[12,"data_length","","The length of the data field of the znode.",10,null],[12,"num_children","","The number of children this znode has.",10,null],[12,"pzxid","","The transaction ID that last modified the children of the …",10,null],[6,"ZkResult","","Value returned from potentially-error operations.",null,null],[3,"ZooKeeper","","The client interface for interacting with a ZooKeeper …",null,null],[8,"ZooKeeperExt","","Extended ZooKeeper operations that are not needed for the …",null,null],[10,"ensure_path","","Ensure that <code>path</code> exists and create all potential paths …",11,[[["str",15]],["zkresult",6]]],[10,"get_children_recursive","","Performs a breadth-first tree traversal of the tree …",11,[[["str",15]],[["zkresult",6],["vec",3]]]],[10,"delete_recursive","","Deletes the node at <code>path</code> and all its children. <em>NOTE</em>: This …",11,[[["str",15]],["zkresult",6]]],[3,"Watch","","An object watching a path for certain changes.",null,null],[12,"path","","The path to the znode this is watching.",12,null],[12,"watch_type","","The type of changes this watch is looking for.",12,null],[12,"watcher","","The handler for this watch, to call when it is triggered.",12,null],[3,"WatchedEvent","","Represents a change on the ZooKeeper that a <code>Watcher</code> is …",null,null],[12,"event_type","","The trigger that caused the watch to hit.",13,null],[12,"keeper_state","","The current state of ZooKeeper (and the client\'s …",13,null],[12,"path","","The path of the znode that was involved. This will be <code>None</code>…",13,null],[8,"Watcher","","The interface for handling events when a <code>Watch</code> triggers.",null,null],[10,"handle","","Receive the triggered event.",14,[[["watchedevent",3]]]],[4,"WatchType","","Describes what a <code>Watch</code> is looking for.",null,null],[13,"Child","","Watching for changes to children.",15,null],[13,"Data","","Watching for changes to data.",15,null],[13,"Exist","","Watching for the creation of a node at the given path.",15,null],[3,"Subscription","","A unique identifier returned by <code>ZooKeeper::add_listener</code>.",null,null],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","zookeeper::recipes::cache","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","zookeeper::recipes::leader","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","zookeeper::recipes::queue","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"ensure_path","zookeeper","",18,[[["str",15]],["zkresult",6]]],[11,"get_children_recursive","","",18,[[["str",15]],[["zkresult",6],["vec",3]]]],[11,"delete_recursive","","",18,[[["str",15]],["zkresult",6]]],[11,"drop","","",18,[[]]],[11,"from","","",5,[[["i32",15]],["zkerror",4]]],[11,"from","","",7,[[["i32",15]],["keeperstate",4]]],[11,"from","","",8,[[["i32",15]],["watchedeventtype",4]]],[11,"clone","","",16,[[],["permission",3]]],[11,"clone","","",4,[[],["acl",3]]],[11,"clone","","",5,[[],["zkerror",4]]],[11,"clone","","",6,[[],["createmode",4]]],[11,"clone","","",7,[[],["keeperstate",4]]],[11,"clone","","",8,[[],["watchedeventtype",4]]],[11,"clone","","",9,[[],["zkstate",4]]],[11,"clone","","",17,[[],["subscription",3]]],[11,"clone","","",13,[[],["watchedevent",3]]],[11,"clone","zookeeper::recipes::cache","",0,[[],["pathchildrencacheevent",4]]],[11,"clone","zookeeper::recipes::leader","",2,[[],["leaderlatch",3]]],[11,"eq","zookeeper","",16,[[["permission",3]],["bool",15]]],[11,"ne","","",16,[[["permission",3]],["bool",15]]],[11,"eq","","",4,[[["acl",3]],["bool",15]]],[11,"ne","","",4,[[["acl",3]],["bool",15]]],[11,"eq","","",5,[[["zkerror",4]],["bool",15]]],[11,"eq","","",6,[[["createmode",4]],["bool",15]]],[11,"eq","","",7,[[["keeperstate",4]],["bool",15]]],[11,"eq","","",9,[[["zkstate",4]],["bool",15]]],[11,"eq","","",17,[[["subscription",3]],["bool",15]]],[11,"ne","","",17,[[["subscription",3]],["bool",15]]],[11,"eq","","",15,[[["watchtype",4]],["bool",15]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","zookeeper::recipes::cache","",0,[[["formatter",3]],["result",6]]],[11,"fmt","zookeeper","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"bitand","","",16,[[]]],[11,"bitor","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"description","","",5,[[],["str",15]]],[18,"NONE","","No permissions are set (server could have been configured …",16,null],[18,"READ","","You can access the data of a node and can list its …",16,null],[18,"WRITE","","You can set the data of a node.",16,null],[18,"CREATE","","You can create a child node.",16,null],[18,"DELETE","","You can delete a child node (but not necessarily this …",16,null],[18,"ADMIN","","You can alter permissions on this node.",16,null],[18,"ALL","","You can do anything.",16,null],[11,"can","","Check that all <code>permissions</code> are set.",16,[[["permission",3]],["bool",15]]],[11,"new","","Create a new ACL with the given <code>permissions</code>, <code>scheme</code>, and …",4,[[["permission",3]],["acl",3]]],[11,"creator_all","","This ACL gives the creators authentication id\'s all …",4,[[],["vec",3]]],[11,"open_unsafe","","This is a completely open ACL.",4,[[],["vec",3]]],[11,"read_unsafe","","This ACL gives the world the ability to read.",4,[[],["vec",3]]],[11,"is_ephemeral","","Is the znode an ephemeral entry?",10,[[],["bool",15]]],[11,"connect","","Connect to a ZooKeeper cluster.",18,[[["duration",3],["str",15]],[["zookeeper",3],["zkresult",6]]]],[11,"add_auth","","Add the specified <code>scheme</code>:<code>auth</code> information to this …",18,[[["u8",15],["vec",3],["tostring",8]],["zkresult",6]]],[11,"create","","Create a node with the given <code>path</code>. The node data will be …",18,[[["acl",3],["vec",3],["u8",15],["vec",3],["createmode",4],["str",15]],[["zkresult",6],["string",3]]]],[11,"delete","","Delete the node with the given <code>path</code>. The call will …",18,[[["i32",15],["option",4],["str",15]],["zkresult",6]]],[11,"exists","","Return the <code>Stat</code> of the node of the given <code>path</code> or <code>None</code> if …",18,[[["bool",15],["str",15]],[["option",4],["zkresult",6]]]],[11,"exists_w","","Return the <code>Stat</code> of the node of the given <code>path</code> or <code>None</code> if …",18,[[["watcher",8],["str",15]],[["option",4],["zkresult",6]]]],[11,"get_acl","","Return the ACL and <code>Stat</code> of the node of the given path.",18,[[["str",15]],["zkresult",6]]],[11,"set_acl","","Set the ACL for the node of the given path if such a node …",18,[[["acl",3],["i32",15],["vec",3],["option",4],["str",15]],[["zkresult",6],["stat",3]]]],[11,"get_children","","Return the list of the children of the node of the given …",18,[[["bool",15],["str",15]],[["zkresult",6],["vec",3]]]],[11,"get_children_w","","Return the list of the children of the node of the given …",18,[[["watcher",8],["str",15]],[["zkresult",6],["vec",3]]]],[11,"get_data","","Return the data and the <code>Stat</code> of the node of the given …",18,[[["bool",15],["str",15]],["zkresult",6]]],[11,"get_data_w","","Return the data and the <code>Stat</code> of the node of the given …",18,[[["watcher",8],["str",15]],["zkresult",6]]],[11,"set_data","","Set the data for the node of the given <code>path</code> if such a …",18,[[["vec",3],["u8",15],["i32",15],["option",4],["str",15]],[["zkresult",6],["stat",3]]]],[11,"add_listener","","Adds a state change <code>Listener</code>, which will be notified of …",18,[[["fn",8],["send",8]],["subscription",3]]],[11,"remove_listener","","Removes a state change <code>Listener</code> and closes the channel.",18,[[["subscription",3]]]],[11,"close","","Close this client object. Once the client is closed, its …",18,[[],["zkresult",6]]]],"p":[[4,"PathChildrenCacheEvent"],[3,"PathChildrenCache"],[3,"LeaderLatch"],[3,"ZkQueue"],[3,"Acl"],[4,"ZkError"],[4,"CreateMode"],[4,"KeeperState"],[4,"WatchedEventType"],[4,"ZkState"],[3,"Stat"],[8,"ZooKeeperExt"],[3,"Watch"],[3,"WatchedEvent"],[8,"Watcher"],[4,"WatchType"],[3,"Permission"],[3,"Subscription"],[3,"ZooKeeper"]]},\
"zookeeper_derive":{"doc":"","i":[[24,"EnumDisplay","zookeeper_derive","Emit an <code>std::fmt::Display</code> implementation for an enum type.",null,null],[24,"EnumError","","Emit an <code>std::error::Error</code> implementation for an enum …",null,null],[24,"EnumConvertFromInt","","Emit an <code>std::convert::From<i32></code> implementation for an …",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);